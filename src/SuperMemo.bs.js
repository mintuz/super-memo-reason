// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var shared = [
  "nextDate",
  "easinessFactor"
];

function newFactor(quality, ef) {
  return ef + (0.1 - (5.0 - quality) * (0.08 + (5.0 - quality) * 0.02));
}

var class_tables = [
  0,
  0,
  0
];

function calculate(quality, repetitionsCount, ef) {
  var match = quality < 3;
  var newRepetitionCount = match ? 0 : repetitionsCount + 1 | 0;
  var newEasinessFactor = /* record */[/* contents */newFactor(quality, ef)];
  var match$1 = newEasinessFactor[0] > 1.3;
  newEasinessFactor[0] = match$1 ? newEasinessFactor[0] : 1.3;
  var newInterval = newRepetitionCount <= 1 ? 1 : (
      newRepetitionCount === 2 ? 6 : newRepetitionCount
    );
  var now = new Date();
  var nextDate = now.valueOf() + newInterval * 86400;
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table(shared);
    var env = CamlinternalOO.new_variable($$class, "");
    var ids = CamlinternalOO.new_methods_variables($$class, shared, [
          "_nextDate",
          "_easinessFactor"
        ]);
    var nextDate$1 = ids[0];
    var easinessFactor = ids[1];
    var _nextDate = ids[2];
    var _easinessFactor = ids[3];
    CamlinternalOO.set_methods($$class, /* array */[
          nextDate$1,
          (function (self$1) {
              return self$1[_nextDate];
            }),
          easinessFactor,
          (function (self$1) {
              return self$1[_easinessFactor];
            })
        ]);
    var env_init = function (env$1) {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[_nextDate] = env$1[2];
      self[_easinessFactor] = env$1[1][0];
      self[env] = env$1[0];
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], [
              0,
              newEasinessFactor,
              nextDate
            ]);
}

exports.newFactor = newFactor;
exports.calculate = calculate;
/* No side effect */
